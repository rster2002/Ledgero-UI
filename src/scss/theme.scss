@use "sass:math";
@use "sass:map";

@use "./color";

@function rgb-values($color) {
    @return #{red($color)} #{green($color)} #{blue($color)};
}

@function interpolate-neutral-color($color-tokens, $min, $max, $target) {
    $factor: math.div($target - $min, $max - $min);
    $min-color: map-get($color-tokens, "--md-ref-palette-neutral#{$min}");
    $max-color: map-get($color-tokens, "--md-ref-palette-neutral#{$max}");

    $red: interpolate-color(red($min-color), red($max-color), $factor);
    $green: interpolate-color(green($min-color), green($max-color), $factor);
    $blue: interpolate-color(blue($min-color), blue($max-color), $factor);

    @return $red $green $blue;
}

@function interpolate-color($a, $b, $factor) {
    $min: math.min($a, $b);
    $max: math.max($a, $b);
    $diff: $max - $min;
    $change: $diff * $factor;

    @return math.round($min + $change);
}

// TODO move these variables into a new map instead to reduce the number of variables needed as these are not referenced
//  directly.
@function create-color-palette($color-tokens) {
    @return map.merge($color-tokens, (
            "--md-ref-palette-neutral4": rgb(interpolate-neutral-color($color-tokens, 0, 10, 4)),
            "--md-ref-palette-neutral6": rgb(interpolate-neutral-color($color-tokens, 0, 10, 6)),
            "--md-ref-palette-neutral12": rgb(interpolate-neutral-color($color-tokens, 10, 20, 12)),
            "--md-ref-palette-neutral17": rgb(interpolate-neutral-color($color-tokens, 10, 20, 17)),
            "--md-ref-palette-neutral22": rgb(interpolate-neutral-color($color-tokens, 20, 25, 22)),
            "--md-ref-palette-neutral24": rgb(interpolate-neutral-color($color-tokens, 20, 25, 24)),
            "--md-ref-palette-neutral87": rgb(interpolate-neutral-color($color-tokens, 80, 90, 87)),
            "--md-ref-palette-neutral92": rgb(interpolate-neutral-color($color-tokens, 90, 95, 92)),
            "--md-ref-palette-neutral94": rgb(interpolate-neutral-color($color-tokens, 90, 95, 94)),
            "--md-ref-palette-neutral96": rgb(interpolate-neutral-color($color-tokens, 95, 98, 96)),
    ));
}

@mixin full-color-tokens {
    --md-sys-color-primary: rgb(var(--md-sys-color-primary-rgb));
    --md-sys-color-primary-container: rgb(var(--md-sys-color-primary-container-rgb));
    --md-sys-color-on-primary: rgb(var(--md-sys-color-on-primary-rgb));
    --md-sys-color-on-primary-container: rgb(var(--md-sys-color-on-primary-container-rgb));
    --md-sys-color-inverse-primary: rgb(var(--md-sys-color-inverse-primary-rgb));

    --md-sys-color-secondary: rgb(var(--md-sys-color-secondary-rgb));
    --md-sys-color-secondary-container: rgb(var(--md-sys-color-secondary-container-rgb));
    --md-sys-color-on-secondary: rgb(var(--md-sys-color-on-secondary-rgb));
    --md-sys-color-on-secondary-container: rgb(var(--md-sys-color-on-secondary-container-rgb));

    --md-sys-color-tertiary: rgb(var(--md-sys-color-tertiary-rgb));
    --md-sys-color-tertiary-container: rgb(var(--md-sys-color-tertiary-container-rgb));
    --md-sys-color-on-tertiary: rgb(var(--md-sys-color-on-tertiary-rgb));
    --md-sys-color-on-tertiary-container: rgb(var(--md-sys-color-on-tertiary-container-rgb));

    --md-sys-color-surface: rgb(var(--md-sys-color-surface-rgb));
    --md-sys-color-surface-dim: rgb(var(--md-sys-color-surface-dim-rgb));
    --md-sys-color-surface-bright: rgb(var(--md-sys-color-surface-bright-rgb));
    --md-sys-color-surface-container-lowest: rgb(var(--md-sys-color-surface-container-lowest-rgb));
    --md-sys-color-surface-container-low: rgb(var(--md-sys-color-surface-container-low-rgb));
    --md-sys-color-surface-container: rgb(var(--md-sys-color-surface-container-rgb));
    --md-sys-color-surface-container-high: rgb(var(--md-sys-color-surface-container-high-rgb));
    --md-sys-color-surface-container-highest: rgb(var(--md-sys-color-surface-container-highest-rgb));
    --md-sys-color-surface-variant: rgb(var(--md-sys-color-surface-variant-rgb));
    --md-sys-color-on-surface: rgb(var(--md-sys-color-on-surface-rgb));
    --md-sys-color-on-surface-variant: rgb(var(--md-sys-color-on-surface-variant-rgb));
    --md-sys-color-inverse-surface: rgb(var(--md-sys-color-inverse-surface-rgb));
    --md-sys-color-inverse-on-surface: rgb(var(--md-sys-color-inverse-on-surface-rgb));

    --md-sys-color-background: rgb(var(--md-sys-color-background-rgb));
    --md-sys-color-on-background: rgb(var(--md-sys-color-on-background-rgb));

    --md-sys-color-error: rgb(var(--md-sys-color-error-rgb));
    --md-sys-color-error-container: rgb(var(--md-sys-color-error-container-rgb));
    --md-sys-color-on-error: rgb(var(--md-sys-color-on-error-rgb));
    --md-sys-color-on-error-container: rgb(var(--md-sys-color-on-error-container-rgb));

    --md-sys-color-outline: rgb(var(--md-sys-color-outline-rgb));
    --md-sys-color-outline-variant: rgb(var(--md-sys-color-outline-variant-rgb));
    --md-sys-shadow: rgb(var(--md-sys-shadow-rgb));
    --md-sys-surface-tint: rgb(var(--md-sys-surface-tint-rgb));
    --md-sys-scrim: rgb(var(--md-sys-scrim-rgb));
}

@mixin light-theme($palette-tokens) {
    $mappings: (
            "--md-sys-color-primary": "--md-ref-palette-primary40",
            "--md-sys-color-primary-container": "--md-ref-palette-primary90",
            "--md-sys-color-on-primary": "--md-ref-palette-primary100",
            "--md-sys-color-on-primary-container": "--md-ref-palette-primary10",
            "--md-sys-color-inverse-primary": "--md-ref-palette-primary80",
            "--md-sys-color-secondary": "--md-ref-palette-secondary40",
            "--md-sys-color-secondary-container": "--md-ref-palette-secondary90",
            "--md-sys-color-on-secondary": "--md-ref-palette-secondary100",
            "--md-sys-color-on-secondary-container": "--md-ref-palette-secondary10",
            "--md-sys-color-tertiary": "--md-ref-palette-tertiary40",
            "--md-sys-color-tertiary-container": "--md-ref-palette-tertiary90",
            "--md-sys-color-on-tertiary": "--md-ref-palette-tertiary100",
            "--md-sys-color-on-tertiary-container": "--md-ref-palette-tertiary10",
            "--md-sys-color-surface": "--md-ref-palette-neutral98",
            "--md-sys-color-surface-dim": "--md-ref-palette-neutral87",
            "--md-sys-color-surface-bright": "--md-ref-palette-neutral98",
            "--md-sys-color-surface-container-lowest": "--md-ref-palette-neutral100",
            "--md-sys-color-surface-container-low": "--md-ref-palette-neutral96",
            "--md-sys-color-surface-container": "--md-ref-palette-neutral94",
            "--md-sys-color-surface-container-high": "--md-ref-palette-neutral92",
            "--md-sys-color-surface-container-highest": "--md-ref-palette-neutral90",
            "--md-sys-color-surface-variant": "--md-ref-palette-neutral-variant90",
            "--md-sys-color-on-surface": "--md-ref-palette-neutral10",
            "--md-sys-color-on-surface-variant": "--md-ref-palette-neutral-variant30",
            "--md-sys-color-inverse-surface": "--md-ref-palette-neutral20",
            "--md-sys-color-on-inverse-surface": "--md-ref-palette-neutral95",
            "--md-sys-color-background": "--md-ref-palette-neutral98",
            "--md-sys-color-on-background": "--md-ref-palette-neutral10",
            "--md-sys-color-error": "--md-ref-palette-error40",
            "--md-sys-color-error-container": "--md-ref-palette-error90",
            "--md-sys-color-on-error": "--md-ref-palette-error100",
            "--md-sys-color-on-error-container": "--md-ref-palette-error10",
            "--md-sys-color-outline": "--md-ref-palette-neutral-variant50",
            "--md-sys-color-outline-variant": "--md-ref-palette-neutral-variant80",
            "--md-sys-shadow": "--md-ref-palette-neutral0",
            "--md-sys-surface-tint": "--md-ref-palette-primary40",
            "--md-sys-scrim": "--md-ref-palette-neutral0",
    );

    @each $color-token, $token in $mappings {
        #{$color-token}-r: red(map.get($palette-tokens, "#{$token}"));
        #{$color-token}-g: green(map.get($palette-tokens, "#{$token}"));
        #{$color-token}-b: blue(map.get($palette-tokens, "#{$token}"));
    }

    --md-sys-elevation-level1: 0px 1px 3px 1px #{color.use(--md-sys-shadow, 0.15)}, 0px 1px 2px 0px #{color.use(--md-sys-shadow, 0.30)};
    --md-sys-elevation-level2: 0px 2px 6px 2px #{color.use(--md-sys-shadow, 0.15)}, 0px 1px 2px 0px #{color.use(--md-sys-shadow, 0.30)};
    --md-sys-elevation-level3: 0px 1px 3px 0px #{color.use(--md-sys-shadow, 0.30)}, 0px 4px 8px 3px #{color.use(--md-sys-shadow, 0.15)};
    --md-sys-elevation-level4: 0px 2px 3px 0px #{color.use(--md-sys-shadow, 0.30)}, 0px 6px 10px 4px #{color.use(--md-sys-shadow, 0.15)};
    --md-sys-elevation-level5: 0px 4px 4px 0px #{color.use(--md-sys-shadow, 0.30)}, 0px 8px 12px 6px #{color.use(--md-sys-shadow, 0.15)};
}

@mixin dark-theme($palette-tokens) {
    $mappings: (
            "--md-sys-color-primary": "--md-ref-palette-primary80",
            "--md-sys-color-primary-container": "--md-ref-palette-primary30",
            "--md-sys-color-on-primary": "--md-ref-palette-primary20",
            "--md-sys-color-on-primary-container": "--md-ref-palette-primary90",
            "--md-sys-color-inverse-primary": "--md-ref-palette-primary40",
            "--md-sys-color-secondary": "--md-ref-palette-secondary80",
            "--md-sys-color-secondary-container": "--md-ref-palette-secondary30",
            "--md-sys-color-on-secondary": "--md-ref-palette-secondary20",
            "--md-sys-color-on-secondary-container": "--md-ref-palette-secondary90",
            "--md-sys-color-tertiary": "--md-ref-palette-tertiary80",
            "--md-sys-color-tertiary-container": "--md-ref-palette-tertiary30",
            "--md-sys-color-on-tertiary": "--md-ref-palette-tertiary20",
            "--md-sys-color-on-tertiary-container": "--md-ref-palette-tertiary90",
            "--md-sys-color-surface": "--md-ref-palette-neutral6",
            "--md-sys-color-surface-dim": "--md-ref-palette-neutral6",
            "--md-sys-color-surface-bright": "--md-ref-palette-neutral24",
            "--md-sys-color-surface-container-lowest": "--md-ref-palette-neutral4",
            "--md-sys-color-surface-container-low": "--md-ref-palette-neutral10",
            "--md-sys-color-surface-container": "--md-ref-palette-neutral12",
            "--md-sys-color-surface-container-high": "--md-ref-palette-neutral17",
            "--md-sys-color-surface-container-highest": "--md-ref-palette-neutral22",
            "--md-sys-color-surface-variant": "--md-ref-palette-neutral-variant30",
            "--md-sys-color-on-surface": "--md-ref-palette-neutral90",
            "--md-sys-color-on-surface-variant": "--md-ref-palette-neutral-variant80",
            "--md-sys-color-inverse-surface": "--md-ref-palette-neutral90",
            "--md-sys-color-on-inverse-surface": "--md-ref-palette-neutral20",
            "--md-sys-color-background": "--md-ref-palette-neutral6",
            "--md-sys-color-on-background": "--md-ref-palette-neutral90",
            "--md-sys-color-error": "--md-ref-palette-error80",
            "--md-sys-color-error-container": "--md-ref-palette-error30",
            "--md-sys-color-on-error": "--md-ref-palette-error20",
            "--md-sys-color-on-error-container": "--md-ref-palette-error90",
            "--md-sys-color-outline": "--md-ref-palette-neutral-variant60",
            "--md-sys-color-outline-variant": "--md-ref-palette-neutral-variant30",
            "--md-sys-shadow": "--md-ref-palette-neutral0",
            "--md-sys-surface-tint": "--md-ref-palette-primary80",
            "--md-sys-scrim": "--md-ref-palette-neutral0",
    );

    @each $color-token, $token in $mappings {
        #{$color-token}-r: red(map.get($palette-tokens, "#{$token}"));
        #{$color-token}-g: green(map.get($palette-tokens, "#{$token}"));
        #{$color-token}-b: blue(map.get($palette-tokens, "#{$token}"));
    }

    --md-sys-elevation-level1: 0px 1px 2px 0px #{color.use(--md-sys-shadow, 0.30)}, 0px 1px 3px 1px #{color.use(--md-sys-shadow, 0.15)};
    --md-sys-elevation-level2: 0px 1px 2px 0px #{color.use(--md-sys-shadow, 0.30)}, 0px 2px 6px 2px #{color.use(--md-sys-shadow, 0.15)};
    --md-sys-elevation-level3: 0px 1px 3px 0px #{color.use(--md-sys-shadow, 0.30)}, 0px 4px 8px 3px #{color.use(--md-sys-shadow, 0.15)};
    --md-sys-elevation-level4: 0px 2px 3px 0px #{color.use(--md-sys-shadow, 0.30)}, 0px 6px 10px 4px #{color.use(--md-sys-shadow, 0.15)};
    --md-sys-elevation-level5: 0px 4px 4px 0px #{color.use(--md-sys-shadow, 0.30)}, 0px 8px 12px 6px #{color.use(--md-sys-shadow, 0.15)};
}
